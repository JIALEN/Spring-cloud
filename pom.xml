<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.alen</groupId>
	<artifactId>spring-cloud</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<modules>
		<module>eureka-client</module>
		<module>ribbon-service</module>
		<module>config-client</module>
		<module>config-server</module>
		<module>eureka-server</module>
		<module>feign-service</module>
		<module>hystrix-service</module>
		<module>microcloud-api</module>
		<module>microcloud-consumer</module>
		<module>microcloud-provider-dept</module>
		<module>microcloud-security</module>
		<module>ribbon-service-provider</module>
		<module>zuul-service</module>
		<module>hystrix-turbine</module>
		<module>hystrix-service-turbine</module>
	</modules>
	<packaging>pom</packaging>

	<name>spring-cloud</name>
	<description>spring Cloud示例</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.8.RELEASE</version>
		<relativePath/>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Edgware.RELEASE</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

	<!--	spring-boot-starter-actuator这个库让我们可以访问应用的很多信息，
    包括：/env、/info、/metrics、/health等。
    现在运行程序，然后在浏览器中访问：http://localhost:8080/health，-->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-actuator</artifactId>
	</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.31</version>
		</dependency>

		<dependency>
			<groupId>com.alen</groupId>
			<artifactId>microcloud-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alen</groupId>
			<artifactId>microcloud-service</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alen</groupId>
			<artifactId>microcloud-security</artifactId>
		</dependency>
</dependencies>


<!--	Maven 使用dependencyManagement 元素来提供了一种管理依赖版本号的方式。
	通常会在一个组织或者项目的最顶层的父POM 中看到dependencyManagement 元素。
	使用pom.xml 中的dependencyManagement 元素能让
	所有在子项目中引用一个依赖而不用显式的列出版本号。Maven 会沿着父子层次向上走，
	直到找到一个拥有dependencyManagement 元素的项目，
	然后它就会使用在这个dependencyManagement 元素中指定的版本号。-->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>


</project>
